{"$schema":"http://json.schemastore.org/sarif-2.1.0-rtm.4","version":"2.1.0","runs":[{"tool":{"driver":{"name":"CSharp Scanner","language":"CS"}},"language":"CS","results":[{"ruleId":"6291d26bf96a26c92f825cda","rule":{"id":"6291d26bf96a26c92f825cda","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d26bf96a26c92f825cda"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"99: \n100: \tdata[\"inlineJS\"] = template.HTML(inlineJS) //this will render the javascript on client browser\n101: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"99: \n100: \tdata[\"inlineJS\"] = template.HTML(inlineJS) //this will render the javascript on client browser\n101: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d28cf96a26c92f825cde","rule":{"id":"6291d28cf96a26c92f825cde","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d28cf96a26c92f825cde"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n64: \t\t\tdata[\"details\"] = vulnDetails\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n64: \t\t\tdata[\"details\"] = vulnDetails\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825cdf","rule":{"id":"6291d297f96a26c92f825cdf","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d297f96a26c92f825cdf"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: \t\t\tvuln := fmt.Sprintf(\"<b>%s</b>\",term)\n62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: \t\t\tvuln := fmt.Sprintf(\"<b>%s</b>\",term)\n62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce2","rule":{"id":"6291d297f96a26c92f825ce2","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d297f96a26c92f825ce2"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n60: \t\t}else{\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n60: \t\t}else{\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce3","rule":{"id":"6291d297f96a26c92f825ce3","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d297f96a26c92f825ce3"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"57: \t\t}else if vulnDetails == \"\"{\n58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"57: \t\t}else if vulnDetails == \"\"{\n58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce4","rule":{"id":"6291d297f96a26c92f825ce4","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"","id":"6291d297f96a26c92f825ce4"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"44: func ToHTML(text string)template.HTML{\n45: \treturn template.HTML(text)\n46: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"44: func ToHTML(text string)template.HTML{\n45: \treturn template.HTML(text)\n46: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce5","rule":{"id":"6291d297f96a26c92f825ce5","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825ce5"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"163: func Md5Sum(text string) string {\n164: \thasher := md5.New()\n165: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"163: func Md5Sum(text string) string {\n164: \thasher := md5.New()\n165: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce6","rule":{"id":"6291d297f96a26c92f825ce6","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825ce6"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: func Md5Sum(text string) string {\n62: \thasher := md5.New()\n63: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: func Md5Sum(text string) string {\n62: \thasher := md5.New()\n63: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce7","rule":{"id":"6291d297f96a26c92f825ce7","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825ce7"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"159: func Md5Sum(text string) string {\n160: \thasher := md5.New()\n161: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"159: func Md5Sum(text string) string {\n160: \thasher := md5.New()\n161: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce8","rule":{"id":"6291d297f96a26c92f825ce8","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"SQL injection is the placement of malicious code in SQL statements, via web page input. It is one of the most common web hacking techniques. SQL injection usually occurs when you ask a user for input, like their username/userid, and instead of a name/id, the user gives you an SQL statement that you will unknowingly run on your database.","markdown":"","id":"6291d297f96a26c92f825ce8"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\sqli\\function.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/sqli/function.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"36: \n37: \tgetProfileSql := fmt.Sprintf(`SELECT p.user_id, p.full_name, p.city, p.phone_number \n38: \t\t\t\t\t\t\t\tFROM Profile as p,Users as u \n39: \t\t\t\t\t\t\t\twhere p.user_id = u.id \n40: \t\t\t\t\t\t\t\tand u.id=%s`, uid) //here is the vulnerable query\n41: \trows, err := DB.Query(getProfileSql)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"function.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\sqli\\function.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/sqli/function.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"36: \n37: \tgetProfileSql := fmt.Sprintf(`SELECT p.user_id, p.full_name, p.city, p.phone_number \n38: \t\t\t\t\t\t\t\tFROM Profile as p,Users as u \n39: \t\t\t\t\t\t\t\twhere p.user_id = u.id \n40: \t\t\t\t\t\t\t\tand u.id=%s`, uid) //here is the vulnerable query\n41: \trows, err := DB.Query(getProfileSql)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"function.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ce9","rule":{"id":"6291d297f96a26c92f825ce9","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825ce9"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"net/http\"\n8: \t\"crypto/md5\"\n9: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"net/http\"\n8: \t\"crypto/md5\"\n9: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825cea","rule":{"id":"6291d297f96a26c92f825cea","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825cea"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"6: \t\"net/http\"\n7: \t\"crypto/md5\"\n8: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"6: \t\"net/http\"\n7: \t\"crypto/md5\"\n8: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825ceb","rule":{"id":"6291d297f96a26c92f825ceb","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"","id":"6291d297f96a26c92f825ceb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"strconv\"\n8: \t\"crypto/md5\"\n9: \t\"database/sql\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"strconv\"\n8: \t\"crypto/md5\"\n9: \t\"database/sql\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"6291d297f96a26c92f825cec","rule":{"id":"6291d297f96a26c92f825cec","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cec"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"123: \tp := NewProfile()\n124: \tp.GetData(sid)\n125: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"123: \tp := NewProfile()\n124: \tp.GetData(sid)\n125: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825ced","rule":{"id":"6291d297f96a26c92f825ced","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825ced"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"81: \tp := NewProfile()\n82: \tp.GetData(sid)\n83: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"81: \tp := NewProfile()\n82: \tp.GetData(sid)\n83: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825cee","rule":{"id":"6291d297f96a26c92f825cee","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cee"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"60: \tp := NewProfile()\n61: \tp.GetData(sid)\n62: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"60: \tp := NewProfile()\n61: \tp.GetData(sid)\n62: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825cef","rule":{"id":"6291d297f96a26c92f825cef","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cef"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"41: \tp := NewProfile()\n42: \tp.GetData(sid)\n43: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"41: \tp := NewProfile()\n42: \tp.GetData(sid)\n43: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825cf0","rule":{"id":"6291d297f96a26c92f825cf0","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cf0"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"40: \ttemplate := template.Must(template.ParseGlob(\"templates/*\"))\n41: \ttemplate.ExecuteTemplate(w, name, data)\n42: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"40: \ttemplate := template.Must(template.ParseGlob(\"templates/*\"))\n41: \ttemplate.ExecuteTemplate(w, name, data)\n42: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825cf1","rule":{"id":"6291d297f96a26c92f825cf1","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cf1"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"34: \t}\n35: \tw.Write(b)\n36: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"34: \t}\n35: \tw.Write(b)\n36: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"6291d297f96a26c92f825cf2","rule":{"id":"6291d297f96a26c92f825cf2","toolComponent":{"name":"SAST Scanner"}},"level":"error","message":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"","id":"6291d297f96a26c92f825cf2"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\middleware\\middleware.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/middleware/middleware.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"70: \t\t\tw.WriteHeader(http.StatusForbidden)\n71: \t\t\tw.Write([]byte(\"Forbidden\"))\n72: \t\t\tlog.Printf(\"sqlmap detect \")\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"middleware.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\middleware\\middleware.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/middleware/middleware.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"70: \t\t\tw.WriteHeader(http.StatusForbidden)\n71: \t\t\tw.Write([]byte(\"Forbidden\"))\n72: \t\t\tlog.Printf(\"sqlmap detect \")\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"middleware.go"}]}],"baselineState":"new","rank":3.0}],"defaultSourceLanguage":"CS","columnKind":"utf16CodeUnits"}]}