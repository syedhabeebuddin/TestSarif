{"$schema":"http://json.schemastore.org/sarif-2.1.0-rtm.4","version":"2.1.0","runs":[{"tool":{"driver":{"name":"offensive 360","rules":[{"id":"XSS","fullDescription":{"text":"An attacker can use XSS to send a malicious script to an unsuspecting user. The end user's browser has no way to know that the script should not be trusted, and will execute the script. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other sensitive information retained by the browser and used with that site. These scripts can even rewrite the content of the HTML page. XSS can cause a variety of problems for the end user that range in severity from an annoyance to complete account compromise. The most severe XSS attacks involve disclosure of the user's session cookie, allowing an attacker to hijack the user's session and take over the account. Other damaging attacks include the disclosure of end user files, installation of Trojan horse programs, redirect the user to some other page or site, or modify presentation of content. An XSS vulnerability allowing an attacker to modify a press release or news item could affect a company's stock price or lessen consumer confidence. An XSS vulnerability on a pharmaceutical site could allow an attacker to modify dosage information resulting in an overdose. ","markdown":"https://owasp.org/www-community/attacks/xss/ | https://www.acunetix.com/websitesecurity/cross-site-scripting/"},"help":{"text":"Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application. The actual attack occurs when the victim visits the web page or web application that executes the malicious code. The web page or web application becomes a vehicle to deliver the malicious script to the user's browser. Vulnerable vehicles that are commonly used for Cross-site Scripting attacks are forums, message boards, and web pages that allow comments. ","markdown":"In general, effectively preventing XSS vulnerabilities is likely to involve a combination of the following measures:\\r\\nFilter input on arrival: At the point where user input is received, filter as strictly as possible based on what is expected or valid input.\\r\\nEncode data on output: At the point where user-controllable data is output in HTTP responses, encode the output to prevent it from being interpreted as active content. Depending on the output context, this might require applying combinations of HTML, URL, JavaScript, and CSS encoding.\\r\\nUse appropriate response headers: To prevent XSS in HTTP responses that aren't intended to contain any HTML or JavaScript, you can use the Content-Type and X-Content-Type-Options headers to ensure that browsers interpret the responses in the way you intend.\\r\\nContent Security Policy: As a last line of defense, you can use Content Security Policy (CSP) to reduce the severity of any XSS vulnerabilities that still occur.\\r\\nit's crucial that you turn off HTTP TRACE support on all web servers. An attacker can steal cookie data via Javascript even when document.cookie is disabled or not supported by the client. This attack is mounted when a user posts a malicious script to a forum so when another user clicks the link, an asynchronous HTTP Trace call is triggered which collects the user's cookie information from the server, and then sends it over to another malicious server that collects the cookie information so the attacker can mount a session hijack attack. This is easily mitigated by removing support for HTTP TRACE on all web servers."},"shortDescription":{"text":"Cross Site Scripting (XSS)","markdown":"Cross Site Scripting (XSS)"},"properties":{"Severity":"Medium"}},{"id":"WEAK_HASH_ALGORITHM","fullDescription":{"text":"SHA-1 algorithm is not collision-resistant.DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.blogging product uses MD5-based algorithm for passwords.forging of certificate signatures using SHA-1 collisions.","markdown":"https://knowledge-base.offensive360.com/WeakHashingConfiguration/"},"help":{"text":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).","markdown":"Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5. For example, rainbow table attacks can become infeasible due to the high computing overhead. Finally, since computing power gets faster and cheaper over time, the technique can be reconfigured to increase the workload without forcing an entire replacement of the algorithm in use."},"shortDescription":{"text":"WEAK HASH ALGORITHM","markdown":"WEAK HASH ALGORITHM"},"properties":{"Severity":"Medium"}},{"id":"SqlInjection","fullDescription":{"text":"A successful SQL injection attack can result in unauthorized access to sensitive data, such as passwords, credit card details, or personal user information. Many high-profile data breaches in recent years have been the result of SQL injection attacks, leading to reputational damage and regulatory fines. A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown the DBMS), recover the content of a given file present on the DBMS file system and in some cases issue commands to the operating system. SQL injection attacks are a type of injection attack, in which SQL commands are injected into data-plane input in order to effect the execution of predefined SQL commands. It generally allows an attacker to view data that they are not normally able to retrieve. This might include data belonging to other users, or any other data that the application itself is able to access. In many cases, an attacker can modify or delete this data, causing persistent changes to the application's content or behavior.","markdown":"https://owasp.org/www-community/attacks/SQL_Injection | https://www.w3schools.com/sql/sql_injection.asp"},"help":{"text":"SQL injection is the placement of malicious code in SQL statements, via web page input. It is one of the most common web hacking techniques. SQL injection usually occurs when you ask a user for input, like their username/userid, and instead of a name/id, the user gives you an SQL statement that you will unknowingly run on your database.","markdown":"One traditional approach to preventing SQL injection attacks is to handle them as an input validation problem and either accept only characters from an allow list of safe values or identify and escape a deny list of potentially malicious values.\\r\\nAn allow list can be a very effective means of enforcing strict input validation rules, but parameterized SQL statements require less maintenance and can offer more guarantees with respect to security. \\r\\nMost instances of SQL injection can be prevented by using parameterized queries (also known as prepared statements) instead of string concatenation within the query.\\r\\nA good way to prevent damage is to restrict access as much as possible (for example, do not connect to the database using the sa or root account). It is also sensible to have different databases for different purposes (for example, separating the database for the shop system and the support forum of your website)."},"shortDescription":{"text":"SQL Injection","markdown":"SQL Injection"},"properties":{"Severity":"Medium"}},{"id":"GoMisconfiguredErrorsCheck","fullDescription":{"text":"If you have written any Go code you have probably encountered the built-in error type. Go code uses error values to indicate an abnormal state. For example, the os.Open function returns a non-nil error value when it fails to open a file.A caller passing a negative argument to Sqrt receives a non-nil error value (whose concrete representation is an errors.errorString value). The caller can access the error string (\"math: square root of…\") by calling the error’s Error method, or by just printing it.","markdown":"https://securego.io/docs/rules/g104.html"},"help":{"text":"A really useful feature of Golang is the ability to return a tuple of a result and an error value from a function. There is an unspoken rule in Golang that the result of a function is unsafe until you make check the error value. Many security exploits can be performed when the error value is not checked.","markdown":"The fmt package formats an error value by calling its Error() string method.It is the error implementation’s responsibility to summarize the context. The error returned by os.Open formats as \"open /etc/passwd: permission denied,\" not just \"permission denied.\" The error returned by our Sqrt is missing information about the invalid argument.To add that information, a useful function is the fmt package’s Errorf. It formats a string according to Printf’s rules and returns it as an error created by errors.New."},"shortDescription":{"text":"Misconfigured Errors Check","markdown":"Misconfigured Errors Check"},"properties":{"Severity":"Medium"}}],"language":"CS"}},"language":"CS","results":[{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"99: \n100: \tdata[\"inlineJS\"] = template.HTML(inlineJS) //this will render the javascript on client browser\n101: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"99: \n100: \tdata[\"inlineJS\"] = template.HTML(inlineJS) //this will render the javascript on client browser\n101: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n64: \t\t\tdata[\"details\"] = vulnDetails\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n64: \t\t\tdata[\"details\"] = vulnDetails\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: \t\t\tvuln := fmt.Sprintf(\"<b>%s</b>\",term)\n62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: \t\t\tvuln := fmt.Sprintf(\"<b>%s</b>\",term)\n62: \t\t\tdata[\"value\"] = template.HTML(value)\n63: \t\t\tdata[\"term\"] = template.HTML(vuln)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n60: \t\t}else{\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n60: \t\t}else{\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"57: \t\t}else if vulnDetails == \"\"{\n58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\xss\\xss.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/xss/xss.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"57: \t\t}else if vulnDetails == \"\"{\n58: \t\t\tdata[\"value\"] = template.HTML(value)\n59: \t\t\tdata[\"term\"] = template.HTML(notFound) //vulnerable function\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"xss.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"XSS","rule":{"id":"XSS","toolComponent":{"name":"offensive 360"}},"message":{"text":"Cross Site Scripting (XSS)","markdown":"","id":"604c3eda7f4b6eba2909dcbb"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"44: func ToHTML(text string)template.HTML{\n45: \treturn template.HTML(text)\n46: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"44: func ToHTML(text string)template.HTML{\n45: \treturn template.HTML(text)\n46: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"163: func Md5Sum(text string) string {\n164: \thasher := md5.New()\n165: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"163: func Md5Sum(text string) string {\n164: \thasher := md5.New()\n165: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: func Md5Sum(text string) string {\n62: \thasher := md5.New()\n63: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"61: func Md5Sum(text string) string {\n62: \thasher := md5.New()\n63: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"159: func Md5Sum(text string) string {\n160: \thasher := md5.New()\n161: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"159: func Md5Sum(text string) string {\n160: \thasher := md5.New()\n161: \thasher.Write([]byte(text))\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"SqlInjection","rule":{"id":"SqlInjection","toolComponent":{"name":"offensive 360"}},"message":{"text":"SQL Injection","markdown":"","id":"604c3eda7f4b6eba2909dcb8"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\sqli\\function.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/sqli/function.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"36: \n37: \tgetProfileSql := fmt.Sprintf(`SELECT p.user_id, p.full_name, p.city, p.phone_number \n38: \t\t\t\t\t\t\t\tFROM Profile as p,Users as u \n39: \t\t\t\t\t\t\t\twhere p.user_id = u.id \n40: \t\t\t\t\t\t\t\tand u.id=%s`, uid) //here is the vulnerable query\n41: \trows, err := DB.Query(getProfileSql)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"function.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\sqli\\function.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/sqli/function.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"36: \n37: \tgetProfileSql := fmt.Sprintf(`SELECT p.user_id, p.full_name, p.city, p.phone_number \n38: \t\t\t\t\t\t\t\tFROM Profile as p,Users as u \n39: \t\t\t\t\t\t\t\twhere p.user_id = u.id \n40: \t\t\t\t\t\t\t\tand u.id=%s`, uid) //here is the vulnerable query\n41: \trows, err := DB.Query(getProfileSql)\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"function.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"net/http\"\n8: \t\"crypto/md5\"\n9: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"net/http\"\n8: \t\"crypto/md5\"\n9: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"6: \t\"net/http\"\n7: \t\"crypto/md5\"\n8: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\csa\\csa.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/csa/csa.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"6: \t\"net/http\"\n7: \t\"crypto/md5\"\n8: \t\"encoding/hex\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"csa.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"WEAK_HASH_ALGORITHM","rule":{"id":"WEAK_HASH_ALGORITHM","toolComponent":{"name":"offensive 360"}},"message":{"text":"WEAK HASH ALGORITHM","markdown":"","id":"62910fbd3ee959ad0038258f"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"strconv\"\n8: \t\"crypto/md5\"\n9: \t\"database/sql\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\user\\user.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/user/user.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"7: \t\"strconv\"\n8: \t\"crypto/md5\"\n9: \t\"database/sql\"\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"user.go"}]}],"baselineState":"new","rank":4.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"123: \tp := NewProfile()\n124: \tp.GetData(sid)\n125: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"123: \tp := NewProfile()\n124: \tp.GetData(sid)\n125: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"81: \tp := NewProfile()\n82: \tp.GetData(sid)\n83: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"81: \tp := NewProfile()\n82: \tp.GetData(sid)\n83: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"60: \tp := NewProfile()\n61: \tp.GetData(sid)\n62: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"60: \tp := NewProfile()\n61: \tp.GetData(sid)\n62: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"41: \tp := NewProfile()\n42: \tp.GetData(sid)\n43: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\vulnerability\\idor\\idor.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/vulnerability/idor/idor.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"41: \tp := NewProfile()\n42: \tp.GetData(sid)\n43: \n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"idor.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"40: \ttemplate := template.Must(template.ParseGlob(\"templates/*\"))\n41: \ttemplate.ExecuteTemplate(w, name, data)\n42: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"40: \ttemplate := template.Must(template.ParseGlob(\"templates/*\"))\n41: \ttemplate.ExecuteTemplate(w, name, data)\n42: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"34: \t}\n35: \tw.Write(b)\n36: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\template.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/template.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"34: \t}\n35: \tw.Write(b)\n36: }\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"template.go"}]}],"baselineState":"new","rank":3.0},{"ruleId":"GoMisconfiguredErrorsCheck","rule":{"id":"GoMisconfiguredErrorsCheck","toolComponent":{"name":"offensive 360"}},"message":{"text":"Misconfigured Errors Check","markdown":"","id":"62910e3f3ee959ad00382585"},"locations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\middleware\\middleware.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/middleware/middleware.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"70: \t\t\tw.WriteHeader(http.StatusForbidden)\n71: \t\t\tw.Write([]byte(\"Forbidden\"))\n72: \t\t\tlog.Printf(\"sqlmap detect \")\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"middleware.go"}]}],"relatedLocations":[{"physicalLocation":{"address":{"relativeAddress":-1,"kind":"File Path","fullyQualifiedName":"govwa-master\\util\\middleware\\middleware.go"},"artifactLocation":{"uri":"file://D:/SAST/3/SAST/SAST.Api/wwwroot/Projects/05281/637893401288669755_govwa-master/govwa-master/util/middleware/middleware.go"},"region":{"startLine":1,"endLine":1,"snippet":{"text":"70: \t\t\tw.WriteHeader(http.StatusForbidden)\n71: \t\t\tw.Write([]byte(\"Forbidden\"))\n72: \t\t\tlog.Printf(\"sqlmap detect \")\n"},"sourceLanguage":"CS"}},"logicalLocations":[{"name":"middleware.go"}]}],"baselineState":"new","rank":3.0}],"defaultSourceLanguage":"CS","columnKind":"utf16CodeUnits"}]}